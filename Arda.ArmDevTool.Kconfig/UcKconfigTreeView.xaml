<!--
  Copyright(C) FU Pengfei, 2007-2018.
  ============================================================================
  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License along
  with this program; if not, write to the Free Software Foundation, Inc.,
  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

  Project    : Arda Kconfig Library
  Description: Kconfig UI for rendering tree view of menu entry.
  Author     : Fu Pengfei
  ============================================================================
  Change Logs:
  Date         Notes
  2018-06-05   first implementation
  ============================================================================
  $Id:: UcKconfigTreeView.xaml 1806 2018-06-16 07:49:08Z fupengfei           $
-->
<UserControl x:Class="Arda.ArmDevTool.Kconfig.UcKconfigTreeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Arda.ArmDevTool.Kconfig"
             xmlns:kconfig="clr-namespace:Arda.ArmDevTool.Kconfig;assembly=ArdaKconfigLib"
             mc:Ignorable="d" 
             d:DesignHeight="400" d:DesignWidth="600">

    <UserControl.Resources>
        <local:EntryTypeToIconPathConverter x:Key="ConverterEntryTypeToIconPath"/>
        <local:BoolToVisibleConverter x:Key="ConverterBoolToVisible"/>
        <local:ValueToTristateConverter x:Key="ConverterValueToTristate"/>
        <local:MenuEntryDataTemplateSelector x:Key="MenuEntryTemplateSelector" />
        <local:ValueTypeToIsTristateConverter x:Key="ConverterValueTypeToIsTristate"/>
        <local:ChoiceToValuePromptConverter x:Key="ConverterChoiceToValuePrompt"/>
        <local:MenuEntryToToolTipConverter x:Key="ConverterMenuEntryToToolTip"/>

        <Style x:Key="TreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Width="16" Height="16" Background="Transparent" Padding="5,5,5,5">
                            <Path x:Name="ExpandPath" Fill="Transparent" Stroke="#FF989898" Data="{StaticResource TreeArrow}">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="135" CenterX="3" CenterY="3"/>
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF1BBBFA"/>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="RenderTransform" TargetName="ExpandPath">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" CenterX="3" CenterY="3"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="#FF595959"/>
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF262626"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MenuEntryStyleBase" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, 
                RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, 
                RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="1,0,0,0"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19" Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" ClickMode="Press" 
                                          IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Border x:Name="Bd" SnapsToDevicePixels="true" Grid.Column="1" Grid.Row="0"
                                    Grid.ColumnSpan="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                <ContentPresenter x:Name="PART_Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header"/>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MenuEntryStyle" TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource MenuEntryStyleBase}">
            <Setter Property="Visibility" Value="{Binding IsVisible, Converter={StaticResource ConverterBoolToVisible}}"/>
            <Setter Property="Margin" Value="1,1,1,1"/>
            <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
            <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded, Mode=TwoWay}" />
        </Style>

        <HierarchicalDataTemplate x:Key ="MenuEntryTemplate"
                                  ItemsSource="{Binding ChildEntries}" 
                                  DataType="kconfig:MenuEntry" 
                                  ItemTemplateSelector="{StaticResource MenuEntryTemplateSelector}" 
                                  ItemContainerStyle="{StaticResource MenuEntryStyle}">
            <Grid ToolTip="{Binding Converter={StaticResource ConverterMenuEntryToToolTip}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Image Width="16" Height="16" Source="{Binding EntryType, 
                    Converter={StaticResource ConverterEntryTypeToIconPath}}" VerticalAlignment="Center"/>
                <TextBlock Text="{Binding Prompt}" Grid.Column="1" VerticalAlignment="Center"/>
            </Grid>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key ="MenuConfigTemplate" 
                                  ItemsSource="{Binding ChildEntries}" 
                                  DataType="kconfig:MenuEntry" 
                                  ItemTemplateSelector="{StaticResource MenuEntryTemplateSelector}" 
                                  ItemContainerStyle="{StaticResource MenuEntryStyle}">
            <Grid ToolTip="{Binding Converter={StaticResource ConverterMenuEntryToToolTip}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Image Width="16" Height="16" Source="Resources/menuconfig.png" VerticalAlignment="Center"/>
                <TextBlock Text="{Binding Prompt}" Grid.Column="1" VerticalAlignment="Center"/>
                <CheckBox Margin="5,0,0,0" IsThreeState="{Binding ValueType, 
                    Converter={StaticResource ConverterValueTypeToIsTristate}}" 
                          IsChecked="{Binding Value, Converter={StaticResource ConverterValueToTristate}}" 
                          Grid.Column="3" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
            </Grid>
        </HierarchicalDataTemplate>
        <HierarchicalDataTemplate x:Key ="ConfigTristateTemplate" 
                                  ItemsSource="{Binding ChildEntries}" 
                                  DataType="kconfig:MenuEntry" 
                                  ItemTemplateSelector="{StaticResource MenuEntryTemplateSelector}" 
                                  ItemContainerStyle="{StaticResource MenuEntryStyle}">
            <Grid ToolTip="{Binding Converter={StaticResource ConverterMenuEntryToToolTip}}">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Image Width="16" Height="16" Source="Resources/config.png" VerticalAlignment="Center"/>
                <TextBlock Text="{Binding Prompt}" Grid.Column="1" VerticalAlignment="Center"/>
                <CheckBox IsThreeState="{Binding ValueType, Converter={StaticResource ConverterValueTypeToIsTristate}}" 
                          IsChecked="{Binding Value, Converter={StaticResource ConverterValueToTristate}}" 
                          Grid.Column="3" VerticalAlignment="Center"/>
            </Grid>
        </HierarchicalDataTemplate>
        <HierarchicalDataTemplate x:Key ="ConfigStringTemplate" 
                                  ItemsSource="{Binding ChildEntries}" 
                                  DataType="kconfig:MenuEntry" 
                                  ItemTemplateSelector="{StaticResource MenuEntryTemplateSelector}" 
                                  ItemContainerStyle="{StaticResource MenuEntryStyle}">
            <Grid  ToolTip="{Binding Converter={StaticResource ConverterMenuEntryToToolTip}}">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Image Width="16" Height="16" Source="Resources/config.png" VerticalAlignment="Center"/>
                <TextBlock Text="{Binding Prompt}" Grid.Column="1" VerticalAlignment="Center"/>
                <TextBox Text="{Binding Path=Value, Mode=TwoWay, ValidatesOnNotifyDataErrors=True, NotifyOnValidationError=True}" 
                         MinWidth="100"  TextAlignment="Right" VerticalAlignment="Center" Grid.Column="3" Margin="0,0,1,0"/>
            </Grid>
        </HierarchicalDataTemplate>
        <HierarchicalDataTemplate x:Key ="ChoiceTemplate"  
                                  DataType="kconfig:MenuEntry" 
                                  ItemsSource="{Binding ChildEntries}" 
                                  ItemTemplateSelector="{StaticResource MenuEntryTemplateSelector}" 
                                  ItemContainerStyle="{StaticResource MenuEntryStyle}">
            <Grid  ToolTip="{Binding Converter={StaticResource ConverterMenuEntryToToolTip}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Image Source="Resources/choice.png" Width="16" Height="16" VerticalAlignment="Center"/>
                <TextBlock Text="{Binding Prompt}" VerticalAlignment="Center" Grid.Column="1"/>
                <TextBlock VerticalAlignment="Center" Grid.Column="3">
                    <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource ConverterChoiceToValuePrompt}">
                            <Binding Path="Value"/>
                            <Binding Path="ChildEntries"/>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </Grid>
        </HierarchicalDataTemplate>

    </UserControl.Resources>
    <!-- Top TreeView's HorizontalContentAlignment should be set to Stretch-->
    <TreeView x:Name="TreeView"
              VirtualizingStackPanel.IsVirtualizing ="True"
              VirtualizingStackPanel.VirtualizationMode ="Recycling"
              ItemTemplate="{StaticResource MenuEntryTemplate}"
              ItemContainerStyle="{StaticResource MenuEntryStyle}"
              HorizontalContentAlignment="Stretch" >
    </TreeView>
</UserControl>
